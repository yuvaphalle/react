{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\shahzad\\\\my-app\\\\node_modules\\\\file-loader\\\\dist\\\\cjs.js??ref--6-oneOf-7!C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\logo.svg\",\"C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\login.js\",\"C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\shop.js\",\"C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\App.js\",\"C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Login\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"name\",\"password\",\"handleChangeName\",\"bind\",\"assertThisInitialized\",\"handleChangePassword\",\"handleSubmit\",\"event\",\"setState\",\"target\",\"value\",\"alert\",\"preventDefault\",\"_this$state\",\"Axios\",\"post\",\"then\",\"result\",\"console\",\"log\",\"react_default\",\"a\",\"createElement\",\"onSubmit\",\"type\",\"onChange\",\"required\",\"React\",\"Component\",\"Shop\",\"products\",\"_this2\",\"axios\",\"get\",\"response\",\"data\",\"map\",\"product\",\"src\",\"image\",\"price\",\"App\",\"className\",\"login\",\"shop\",\"logo\",\"alt\",\"href\",\"rel\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { component } from \\\"react\\\";\\r\\nimport Axios from \\\"axios\\\";\\r\\n\\r\\nclass Login extends React.Component {\\r\\n    constructor(props) {\\r\\n      super(props);\\r\\n      this.state = {name: '',password:''};\\r\\n  \\r\\n      this.handleChangeName = this.handleChangeName.bind(this);\\r\\n      this.handleChangePassword = this.handleChangePassword.bind(this);\\r\\n      this.handleSubmit = this.handleSubmit.bind(this);\\r\\n    }\\r\\n  \\r\\n    handleChangeName(event) {\\r\\n        this.setState({name: event.target.value});\\r\\n    }\\r\\n    \\r\\n    handleChangePassword(event) {\\r\\n        this.setState({password:event.target.value});\\r\\n    }\\r\\n  \\r\\n    handleSubmit(event) {\\r\\n      alert('A name was submitted: ' + this.state.name +' - '+ this.state.password);\\r\\n      event.preventDefault();\\r\\n      \\r\\n      const {name,password} = this.state;\\r\\n      //Send a post request\\r\\n      Axios.post('/login',{name,password}).then((result)=>{\\r\\n          //access results\\r\\n          console.log(result);\\r\\n        });\\r\\n      }\\r\\n    \\r\\n  \\r\\n    render() {\\r\\n      return (\\r\\n        <form onSubmit={this.handleSubmit}>\\r\\n          <label>\\r\\n            Name:\\r\\n            <input type=\\\"text\\\" value={this.state.name} onChange={this.handleChangeName} required/>\\r\\n          </label>\\r\\n          <label>\\r\\n          Password:\\r\\n          <input type=\\\"password\\\" value={this.state.password} onChange={this.handleChangePassword} required/>\\r\\n          </label>\\r\\n          <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\r\\n        </form>\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  \\r\\n\\r\\nexport default Login;\",\"import React, {Component} from 'react';\\r\\nimport axios from 'axios';\\r\\n\\r\\nclass Shop extends Component {\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state={\\r\\n            products :[]\\r\\n\\r\\n        };\\r\\n    }\\r\\n    componentWillMount(){\\r\\n        axios.get('/products').then((response) => {\\r\\n            console.log(response.data.products);\\r\\n            this.setState({\\r\\n                products:response.data.products\\r\\n            })\\r\\n        \\r\\n        });\\r\\n    }\\r\\n    render(){\\r\\n        let products = this.state.products.map((products)=>{\\r\\n            return(\\r\\n                <tr>\\r\\n                    <td>{product.name}</td>\\r\\n                    <td><img src={product.image}/></td>\\r\\n                    <td>{product.price}</td>\\r\\n                </tr>\\r\\n            )\\r\\n        });\\r\\n        return(<tbody> {products}</tbody>\\r\\n            );\\r\\n    }\\r\\n}\\r\\nexport default Shop;\",\"import React from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport Login from './login';\\nimport Shop from './shop';\\n\\nfunction App() {\\n  return (\\n    <div className=\\\"App\\\">\\n      <header className=\\\"App-header\\\">\\n      <Login/>\\n      <Shop/>\\n        <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n        <p>\\n          Edit <code>src/App.js</code> and save to reload.\\n        </p>\\n        <a\\n          className=\\\"App-link\\\"\\n          href=\\\"https://reactjs.org\\\"\\n          target=\\\"_blank\\\"\\n          rel=\\\"noopener noreferrer\\\"\\n        >\\n          Learn React\\n        </a>\\n      </header>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(e,t,a){e.exports=a.p+\"static/media/logo.5d5d9eef.svg\"},18:function(e,t,a){e.exports=a(45)},24:function(e,t,a){},25:function(e,t,a){},45:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),l=a(16),o=a.n(l),s=(a(24),a(17)),c=a.n(s),i=(a(25),a(3)),u=a(4),d=a(7),m=a(5),h=a(2),p=a(8),b=a(6),g=a.n(b),v=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(d.a)(this,Object(m.a)(t).call(this,e))).state={name:\"\",password:\"\"},a.handleChangeName=a.handleChangeName.bind(Object(h.a)(a)),a.handleChangePassword=a.handleChangePassword.bind(Object(h.a)(a)),a.handleSubmit=a.handleSubmit.bind(Object(h.a)(a)),a}return Object(p.a)(t,e),Object(u.a)(t,[{key:\"handleChangeName\",value:function(e){this.setState({name:e.target.value})}},{key:\"handleChangePassword\",value:function(e){this.setState({password:e.target.value})}},{key:\"handleSubmit\",value:function(e){alert(\"A name was submitted: \"+this.state.name+\" - \"+this.state.password),e.preventDefault();var t=this.state,a=t.name,n=t.password;g.a.post(\"/login\",{name:a,password:n}).then(function(e){console.log(e)})}},{key:\"render\",value:function(){return r.a.createElement(\"form\",{onSubmit:this.handleSubmit},r.a.createElement(\"label\",null,\"Name:\",r.a.createElement(\"input\",{type:\"text\",value:this.state.name,onChange:this.handleChangeName,required:!0})),r.a.createElement(\"label\",null,\"Password:\",r.a.createElement(\"input\",{type:\"password\",value:this.state.password,onChange:this.handleChangePassword,required:!0})),r.a.createElement(\"input\",{type:\"submit\",value:\"Submit\"}))}}]),t}(r.a.Component),f=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(d.a)(this,Object(m.a)(t).call(this,e))).state={products:[]},a}return Object(p.a)(t,e),Object(u.a)(t,[{key:\"componentWillMount\",value:function(){var e=this;g.a.get(\"/products\").then(function(t){console.log(t.data.products),e.setState({products:t.data.products})})}},{key:\"render\",value:function(){var e=this.state.products.map(function(e){return r.a.createElement(\"tr\",null,r.a.createElement(\"td\",null,product.name),r.a.createElement(\"td\",null,r.a.createElement(\"img\",{src:product.image})),r.a.createElement(\"td\",null,product.price))});return r.a.createElement(\"tbody\",null,\" \",e)}}]),t}(n.Component);var w=function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(v,null),r.a.createElement(f,null),r.a.createElement(\"img\",{src:c.a,className:\"App-logo\",alt:\"logo\"}),r.a.createElement(\"p\",null,\"Edit \",r.a.createElement(\"code\",null,\"src/App.js\"),\" and save to reload.\"),r.a.createElement(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Learn React\")))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[18,1,2]]]);","extractedComments":[]}