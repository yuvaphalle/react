{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\shahzad\\\\my-app\\\\node_modules\\\\file-loader\\\\dist\\\\cjs.js??ref--6-oneOf-7!C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\logo.svg\",\"C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\login.js\",\"C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\App.js\",\"C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\shahzad\\\\my-app\\\\src\\\\index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Login\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"name\",\"password\",\"handleChangeName\",\"bind\",\"assertThisInitialized\",\"handleChangePassword\",\"handleSubmit\",\"event\",\"setState\",\"target\",\"value\",\"alert\",\"preventDefault\",\"react_default\",\"a\",\"createElement\",\"onSubmit\",\"type\",\"onChange\",\"required\",\"React\",\"Component\",\"ReactDOM\",\"render\",\"login_Login\",\"document\",\"getElementById\",\"App\",\"className\",\"login\",\"src\",\"logo\",\"alt\",\"href\",\"rel\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"src_App\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4QCGlCC,qBACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAACC,KAAM,GAAGC,SAAS,IAEhCT,EAAKU,iBAAmBV,EAAKU,iBAAiBC,KAAtBV,OAAAW,EAAA,EAAAX,CAAAD,IACxBA,EAAKa,qBAAuBb,EAAKa,qBAAqBF,KAA1BV,OAAAW,EAAA,EAAAX,CAAAD,IAC5BA,EAAKc,aAAed,EAAKc,aAAaH,KAAlBV,OAAAW,EAAA,EAAAX,CAAAD,IANHA,gFASFe,GACbZ,KAAKa,SAAS,CAACR,KAAMO,EAAME,OAAOC,qDAGjBH,GACjBZ,KAAKa,SAAS,CAACP,SAASM,EAAME,OAAOC,6CAG5BH,GACXI,MAAM,yBAA2BhB,KAAKI,MAAMC,KAAM,MAAOL,KAAKI,MAAME,UACpEM,EAAMK,kDAIN,OACEC,EAAAC,EAAAC,cAAA,OAAA,CAAMC,SAAUrB,KAAKW,cACnBO,EAAAC,EAAAC,cAAA,QAAA,KAAA,QAEEF,EAAAC,EAAAC,cAAA,QAAA,CAAOE,KAAK,OAAOP,MAAOf,KAAKI,MAAMC,KAAMkB,SAAUvB,KAAKO,iBAAkBiB,UAAQ,KAEtFN,EAAAC,EAAAC,cAAA,QAAA,KAAA,YAEAF,EAAAC,EAAAC,cAAA,QAAA,CAAOE,KAAK,WAAWP,MAAOf,KAAKI,MAAME,SAAUiB,SAAUvB,KAAKU,qBAAsBc,UAAQ,KAEhGN,EAAAC,EAAAC,cAAA,QAAA,CAAOE,KAAK,SAASP,MAAM,mBAlCjBU,EAAAA,EAAMC,YAwCxBC,SAASC,OACPV,EAAAC,EAAAC,cAACS,EAAD,MACAC,SAASC,eAAe,SAGbpC,IAAAA,EAAAA,ECrBAqC,IAAAA,EAtBf,WACE,OACEd,EAAAC,EAAAC,cAAA,MAAA,CAAKa,UAAU,OACbf,EAAAC,EAAAC,cAAA,SAAA,CAAQa,UAAU,cAClBf,EAAAC,EAAAC,cAACc,EAAD,MACEhB,EAAAC,EAAAC,cAAA,MAAA,CAAKe,IAAKC,EAAAA,EAAMH,UAAU,WAAWI,IAAI,SACzCnB,EAAAC,EAAAC,cAAA,IAAA,KAAA,QACOF,EAAAC,EAAAC,cAAA,OAAA,KAAA,cADP,wBAGAF,EAAAC,EAAAC,cAAA,IAAA,CACEa,UAAU,WACVK,KAAK,sBACLxB,OAAO,SACPyB,IAAI,uBAJN,kBCFYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNjB,EAAAA,EAASC,OAAOV,EAAAC,EAAAC,cAACyB,EAAD,MAASf,SAASC,eAAe,SD2H3C,kBAAmBe,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { component } from \\\"react\\\";\\r\\nimport Axios from \\\"axios\\\";\\r\\n\\r\\nclass Login extends React.Component {\\r\\n    constructor(props) {\\r\\n      super(props);\\r\\n      this.state = {name: '',password:''};\\r\\n  \\r\\n      this.handleChangeName = this.handleChangeName.bind(this);\\r\\n      this.handleChangePassword = this.handleChangePassword.bind(this);\\r\\n      this.handleSubmit = this.handleSubmit.bind(this);\\r\\n    }\\r\\n  \\r\\n    handleChangeName(event) {\\r\\n        this.setState({name: event.target.value});\\r\\n    }\\r\\n    \\r\\n    handleChangePassword(event) {\\r\\n        this.setState({password:event.target.value});\\r\\n    }\\r\\n  \\r\\n    handleSubmit(event) {\\r\\n      alert('A name was submitted: ' + this.state.name +' - '+ this.state.password);\\r\\n      event.preventDefault();\\r\\n    }\\r\\n  \\r\\n    render() {\\r\\n      return (\\r\\n        <form onSubmit={this.handleSubmit}>\\r\\n          <label>\\r\\n            Name:\\r\\n            <input type=\\\"text\\\" value={this.state.name} onChange={this.handleChangeName} required/>\\r\\n          </label>\\r\\n          <label>\\r\\n          Password:\\r\\n          <input type=\\\"password\\\" value={this.state.password} onChange={this.handleChangePassword} required/>\\r\\n          </label>\\r\\n          <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\r\\n        </form>\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  ReactDOM.render(\\r\\n    <Login />,\\r\\n    document.getElementById('root')\\r\\n  );\\r\\n\\r\\nexport default Login;\",\"import React from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport Login from './login';\\n\\nfunction App() {\\n  return (\\n    <div className=\\\"App\\\">\\n      <header className=\\\"App-header\\\">\\n      <Login/>\\n        <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n        <p>\\n          Edit <code>src/App.js</code> and save to reload.\\n        </p>\\n        <a\\n          className=\\\"App-link\\\"\\n          href=\\\"https://reactjs.org\\\"\\n          target=\\\"_blank\\\"\\n          rel=\\\"noopener noreferrer\\\"\\n        >\\n          Learn React\\n        </a>\\n      </header>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,a,t){e.exports=t.p+\"static/media/logo.5d5d9eef.svg\"},17:function(e,a,t){e.exports=t(45)},23:function(e,a,t){},24:function(e,a,t){},45:function(e,a,t){\"use strict\";t.r(a);var n=t(0),r=t.n(n),l=t(10),o=t.n(l),s=(t(23),t(11)),i=t.n(s),c=(t(24),t(12)),u=t(13),d=t(15),m=t(14),h=t(2),p=t(16),b=(t(25),function(e){function a(e){var t;return Object(c.a)(this,a),(t=Object(d.a)(this,Object(m.a)(a).call(this,e))).state={name:\"\",password:\"\"},t.handleChangeName=t.handleChangeName.bind(Object(h.a)(t)),t.handleChangePassword=t.handleChangePassword.bind(Object(h.a)(t)),t.handleSubmit=t.handleSubmit.bind(Object(h.a)(t)),t}return Object(p.a)(a,e),Object(u.a)(a,[{key:\"handleChangeName\",value:function(e){this.setState({name:e.target.value})}},{key:\"handleChangePassword\",value:function(e){this.setState({password:e.target.value})}},{key:\"handleSubmit\",value:function(e){alert(\"A name was submitted: \"+this.state.name+\" - \"+this.state.password),e.preventDefault()}},{key:\"render\",value:function(){return r.a.createElement(\"form\",{onSubmit:this.handleSubmit},r.a.createElement(\"label\",null,\"Name:\",r.a.createElement(\"input\",{type:\"text\",value:this.state.name,onChange:this.handleChangeName,required:!0})),r.a.createElement(\"label\",null,\"Password:\",r.a.createElement(\"input\",{type:\"password\",value:this.state.password,onChange:this.handleChangePassword,required:!0})),r.a.createElement(\"input\",{type:\"submit\",value:\"Submit\"}))}}]),a}(r.a.Component));ReactDOM.render(r.a.createElement(b,null),document.getElementById(\"root\"));var g=b;var w=function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(g,null),r.a.createElement(\"img\",{src:i.a,className:\"App-logo\",alt:\"logo\"}),r.a.createElement(\"p\",null,\"Edit \",r.a.createElement(\"code\",null,\"src/App.js\"),\" and save to reload.\"),r.a.createElement(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Learn React\")))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[17,1,2]]]);","extractedComments":[]}